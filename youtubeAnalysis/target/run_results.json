{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.8", "generated_at": "2025-08-19T04:04:44.394349Z", "invocation_id": "f856e686-83f2-45b3-9273-66dd3722f90e", "invocation_started_at": "2025-08-19T04:04:32.388652Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:36.262468Z", "completed_at": "2025-08-19T04:04:36.268583Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:36.268871Z", "completed_at": "2025-08-19T04:04:37.549709Z"}], "thread_id": "Thread-1", "execution_time": 1.2880208492279053, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "2d55e8c2-6d41-4468-905c-be520a711b1f", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.src_categories", "compiled": true, "compiled_code": "With raw_categories AS(\n    SELECT region_code, region_name,\n    SAFE_CAST(category_id AS INT64) AS category_id,\n    category_title\n    FROM youtubeDataAnalysis.category_data\n)\nSELECT * FROM raw_categories", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`src_categories`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:37.553276Z", "completed_at": "2025-08-19T04:04:37.555001Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:37.555240Z", "completed_at": "2025-08-19T04:04:38.852110Z"}], "thread_id": "Thread-1", "execution_time": 1.30000901222229, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "c08a1aa0-503a-4c99-9e1a-f262cbf766a5", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.src_videos", "compiled": true, "compiled_code": "WITH raw_videos AS (\n    SELECT\n    video_id,\n    -- Convert publishedAt to TIMESTAMP\n    SAFE_CAST(publishedAt AS TIMESTAMP) AS publishedAt,\n    COALESCE(channel_Id, 'Not Given') AS channel_Id,\n    COALESCE(video_title, 'Not Given') AS video_title,\n    COALESCE(channel_Title, 'Not Given') AS channel_Title,\n    -- Convert categoryId to INT64\n    SAFE_CAST(categoryId AS INT64) AS categoryId,\n    -- Convert ISO 8601 duration (e.g., PT2M3S) to seconds\n    (\n        COALESCE(SAFE_CAST(REGEXP_EXTRACT(duration, r'PT(\\d+)H') AS INT64), 0) * 3600 +\n        COALESCE(SAFE_CAST(REGEXP_EXTRACT(duration, r'PT(?:\\d+H)?(\\d+)M') AS INT64), 0) * 60 +\n        COALESCE(SAFE_CAST(REGEXP_EXTRACT(duration, r'PT(?:\\d+H)?(?:\\d+M)?(\\d+)S') AS INT64), 0)\n        ) AS duration_sec,\n    COALESCE(dimension, 'Not Given') AS dimension,\n    COALESCE(definition, 'Not Given') AS definition,\n    -- Convert caption to BOOLEAN\n    CASE\n    WHEN LOWER(caption) = 'true' THEN TRUE\n    WHEN LOWER(caption) = 'false' THEN FALSE\n    ELSE NULL\n    END AS caption,\n    licensedContent,\n    madeForKids,\n    -- Convert viewCount, likeCount, commentCount to INT64\n    SAFE_CAST(viewCount AS INT64) AS viewCount,\n    SAFE_CAST(likeCount AS INT64) AS likeCount,\n    SAFE_CAST(commentCount AS INT64) AS commentCount,\n    COALESCE(country, 'Not Given') AS country\nFROM\n    `youtubeDataAnalysis.video_data`\n)\nSELECT * FROM raw_videos", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`src_videos`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:38.858538Z", "completed_at": "2025-08-19T04:04:38.865573Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:38.866075Z", "completed_at": "2025-08-19T04:04:40.209469Z"}], "thread_id": "Thread-1", "execution_time": 1.3527040481567383, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "3a9716d3-e765-4c67-8ac8-8c03d201b610", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.combined_daily", "compiled": true, "compiled_code": "SELECT\n    v.*,\n    c.category_title,\n    CURRENT_DATE() AS trending_date\nFROM `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_videos` v\nLEFT JOIN `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_categories` c\n    ON v.categoryId = c.category_id\n    AND v.country = c.region_name", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`combined_daily`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:40.215974Z", "completed_at": "2025-08-19T04:04:40.222647Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:40.223082Z", "completed_at": "2025-08-19T04:04:41.430208Z"}], "thread_id": "Thread-1", "execution_time": 1.2161169052124023, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "fd1c8638-0184-447a-b885-196b6e6763da", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.country_wise_summary", "compiled": true, "compiled_code": "-- models/country_trending_summary.sql\n-- Description: Generates a high-level country-wise YouTube trending summary\n\nWITH base AS (\n    -- Combine videos and categories\n    SELECT\n        v.*,\n        c.category_title,\n        CURRENT_DATE() AS trending_date,\n        DATE_DIFF(CURRENT_DATE(), DATE(v.publishedAt), DAY) AS video_age_days,\n        SAFE_DIVIDE(v.likeCount, NULLIF(v.viewCount, 0)) AS like_ratio\n    FROM `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_videos` v\n    LEFT JOIN `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_categories` c\n        ON v.categoryId = c.category_id\n        AND v.country = c.region_name\n),\n\n-- 1\ufe0f\u20e3 Global top video by views\ntop_video AS (\n    SELECT\n        video_title,\n        country,\n        viewCount\n    FROM base\n    ORDER BY viewCount DESC\n    LIMIT 1\n),\n\n-- 2\ufe0f\u20e3 Video with highest engagement ratio globally\ntop_engagement AS (\n    SELECT\n        video_title,\n        country,\n        like_ratio\n    FROM base\n    ORDER BY like_ratio DESC\n    LIMIT 1\n),\n\n-- 3\ufe0f\u20e3 Average likes-to-views ratio per country\ncountry_engagement AS (\n    SELECT\n        country,\n        ROUND(AVG(like_ratio)*100,1) AS avg_like_pct,\n        ROUND(AVG(video_age_days),1) AS avg_video_age_days\n    FROM base\n    GROUP BY country\n),\n\n-- 4\ufe0f\u20e3 Countries with longest trending videos (average video age)\nlong_trending AS (\n    SELECT\n        country,\n        ROUND(AVG(video_age_days),1) AS avg_video_age_days\n    FROM base\n    GROUP BY country\n    ORDER BY avg_video_age_days DESC\n    LIMIT 2\n)\n\nSELECT\n    CONCAT(\n        'Trending videos today span across ', COUNT(DISTINCT country), ' countries. ',\n        'The most-watched video is \"', (SELECT video_title FROM top_video), '\" from ', \n            (SELECT country FROM top_video), ' with ', \n            FORMAT('%0.1fM', (SELECT viewCount FROM top_video)/1000000), ' views. ',\n        'The video with the highest engagement ratio is \"', (SELECT video_title FROM top_engagement), '\" in ',\n            (SELECT country FROM top_engagement), ' with ', \n            ROUND((SELECT like_ratio FROM top_engagement)*100,1), '% likes-to-views. ',\n        'Viewer engagement varies across countries. ',\n        'Some countries have videos trending for longer periods. ',\n        'The countries with the highest average video age are ', \n            (SELECT STRING_AGG(country, ' and ') FROM long_trending), ' with average ages of ', \n            (SELECT STRING_AGG(CAST(avg_video_age_days AS STRING), ' and ') FROM long_trending), ' days.'\n    ) AS summary_text\nFROM base\nLIMIT 1", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`country_wise_summary`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:41.436888Z", "completed_at": "2025-08-19T04:04:41.446163Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:41.446605Z", "completed_at": "2025-08-19T04:04:42.882441Z"}], "thread_id": "Thread-1", "execution_time": 1.4480059146881104, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "b68e563e-9812-4f49-aeb3-dbf85791d090", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.video_stats_summary", "compiled": true, "compiled_code": "-- models/youtube_summary_story.sql\n-- Description: Generates a daily, humanized, story-style summary of trending YouTube videos\n-- with formatted numbers (K / M style)\n\nWITH base AS (\n    SELECT\n        v.*,\n        c.category_title,\n        CURRENT_DATE() AS trending_date\n    FROM `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_videos` v\n    LEFT JOIN `third-flare-425403-c0`.`youtubeDataAnalysis`.`src_categories` c\n        ON v.categoryId = c.category_id\n        AND v.country = c.region_name\n),\n\n-- Helper formatting function\nformatted AS (\n    SELECT\n        *,\n        CASE \n            WHEN viewCount >= 1000000 THEN CONCAT(ROUND(viewCount/1000000,1), 'M')\n            WHEN viewCount >= 1000 THEN CONCAT(ROUND(viewCount/1000,1), 'K')\n            ELSE CAST(viewCount AS STRING)\n        END AS viewCount_fmt,\n        CASE \n            WHEN likeCount >= 1000000 THEN CONCAT(ROUND(likeCount/1000000,1), 'M')\n            WHEN likeCount >= 1000 THEN CONCAT(ROUND(likeCount/1000,1), 'K')\n            ELSE CAST(likeCount AS STRING)\n        END AS likeCount_fmt,\n        CASE \n            WHEN commentCount >= 1000000 THEN CONCAT(ROUND(commentCount/1000000,1), 'M')\n            WHEN commentCount >= 1000 THEN CONCAT(ROUND(commentCount/1000,1), 'K')\n            ELSE CAST(commentCount AS STRING)\n        END AS commentCount_fmt\n    FROM base\n),\n\n-- 1\ufe0f\u20e3 Top channels by number of trending videos\ntop_channels AS (\n    SELECT\n        trending_date,\n        ARRAY_AGG(channel_Title ORDER BY cnt DESC LIMIT 2) AS top_channels\n    FROM (\n        SELECT\n            trending_date,\n            channel_Title,\n            COUNT(video_id) AS cnt\n        FROM formatted\n        GROUP BY trending_date, channel_Title\n    )\n    GROUP BY trending_date\n),\n\n-- 2\ufe0f\u20e3 Top 3 videos by views\ntop_videos AS (\n    SELECT\n        trending_date,\n        ARRAY_AGG(STRUCT(video_title, channel_Title, viewCount, likeCount, commentCount,\n                         viewCount_fmt, likeCount_fmt, commentCount_fmt)\n                  ORDER BY viewCount DESC LIMIT 3) AS top_videos\n    FROM formatted\n    GROUP BY trending_date\n),\n\n-- 3\ufe0f\u20e3 Category counts and percentages\ncategory_counts AS (\n    SELECT\n        trending_date,\n        category_title,\n        COUNT(video_id) AS cnt\n    FROM formatted\n    GROUP BY trending_date, category_title\n),\ncategory_pct AS (\n    SELECT\n        trending_date,\n        ARRAY_AGG(STRUCT(category_title, ROUND(100 * cnt / total_cnt,1) AS pct)) AS category_pct\n    FROM (\n        SELECT\n            trending_date,\n            category_title,\n            cnt,\n            SUM(cnt) OVER(PARTITION BY trending_date) AS total_cnt\n        FROM category_counts\n    )\n    GROUP BY trending_date\n),\n\n-- 4\ufe0f\u20e3 Total metrics per day\nagg AS (\n    SELECT\n        trending_date,\n        COUNT(*) AS total_videos,\n        SUM(viewCount) AS total_views,\n        SUM(likeCount) AS total_likes,\n        SUM(commentCount) AS total_comments\n    FROM formatted\n    GROUP BY trending_date\n)\n\n-- 5\ufe0f\u20e3 Combine everything into the story summary\nSELECT\n    a.trending_date,\n    CONCAT(\n        'Today, ', a.total_videos, ' videos are trending on YouTube. ',\n        'Top channels: ', ARRAY_TO_STRING(b.top_channels, ' and '), '. ',\n        'Top 3 videos: ',\n        ARRAY_TO_STRING(\n            ARRAY(\n                SELECT CONCAT('\"', video_title, '\" by ', channel_Title, \n                              ' (', viewCount_fmt, ' views, ', likeCount_fmt, ' likes, ', commentCount_fmt, ' comments)')\n                FROM UNNEST(c.top_videos)\n            ), '; '\n        ),\n        '. Engagement highlight: the top video has a likes-to-views ratio of ', \n        ROUND(c.top_videos[OFFSET(0)].likeCount / NULLIF(c.top_videos[OFFSET(0)].viewCount,0), 2)*100, '%',\n        '. Categories leading today: ',\n        ARRAY_TO_STRING(\n            ARRAY(\n                SELECT CONCAT(category_title, ' (', pct, '%)')\n                FROM UNNEST(d.category_pct)\n                ORDER BY pct DESC\n                LIMIT 2\n            ), ' and '\n        ), '.'\n    ) AS summary_text\nFROM agg a\nLEFT JOIN top_channels b USING (trending_date)\nLEFT JOIN top_videos c USING (trending_date)\nLEFT JOIN category_pct d USING (trending_date)\nORDER BY a.trending_date DESC", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`video_stats_summary`", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-08-19T04:04:42.889754Z", "completed_at": "2025-08-19T04:04:42.895536Z"}, {"name": "execute", "started_at": "2025-08-19T04:04:42.896066Z", "completed_at": "2025-08-19T04:04:44.302910Z"}], "thread_id": "Thread-1", "execution_time": 1.4155449867248535, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "third-flare-425403-c0", "job_id": "c398a7de-909f-4d5a-966f-a0af9a9b1c32", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.youtubeAnalysis.video_stats_daily", "compiled": true, "compiled_code": "SELECT\n    video_id,\n    publishedAt,\n    channel_Id,\n    video_title,\n    channel_Title,\n    categoryId,\n    category_title,\n    duration_sec,\n    dimension,\n    definition,\n    caption,\n    licensedContent,\n    madeForKids,\n    trending_date,\n    MAX(viewCount) AS viewCount,\n    MAX(likeCount) AS likeCount,\n    MAX(commentCount) AS commentCount\nFROM `third-flare-425403-c0`.`youtubeDataAnalysis`.`combined_daily`\nGROUP BY\n    video_id,\n    publishedAt,\n    channel_Id,\n    video_title,\n    channel_Title,\n    categoryId,\n    duration_sec,\n    dimension,\n    definition,\n    caption,\n    licensedContent,\n    madeForKids,\n    category_title,\n    trending_date", "relation_name": "`third-flare-425403-c0`.`youtubeDataAnalysis`.`video_stats_daily`", "batch_results": null}], "elapsed_time": 9.337804079055786, "args": {"show_resource_report": false, "source_freshness_run_project_hooks": true, "log_format_file": "debug", "use_colors": true, "indirect_selection": "eager", "log_file_max_bytes": 10485760, "require_batched_execution_for_custom_microbatch_strategy": false, "require_yaml_configuration_for_mf_time_spines": false, "select": [], "favor_state": false, "empty": false, "log_path": "/Users/divya21raj/Documents/Sunny_Documents/Projects/youtubeDataAnalysis/youtubeAnalysis/logs", "populate_cache": true, "print": true, "require_nested_cumulative_type_params": false, "static_parser": true, "skip_nodes_if_on_run_start_fails": false, "upload_to_artifacts_ingest_api": false, "partial_parse": true, "use_colors_file": true, "use_fast_test_edges": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "cache_selected_only": false, "project_dir": "/Users/divya21raj/Documents/Sunny_Documents/Projects/youtubeDataAnalysis/youtubeAnalysis", "defer": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level_file": "debug", "state_modified_compare_more_unrendered_values": false, "exclude": [], "log_level": "info", "validate_macro_args": false, "require_all_warnings_handled_by_warn_error": false, "state_modified_compare_vars": false, "printer_width": 80, "send_anonymous_usage_stats": true, "require_generic_test_arguments_property": true, "show_all_deprecations": false, "vars": {}, "invocation_command": "dbt run", "version_check": true, "macro_debugging": false, "require_resource_names_without_spaces": true, "which": "run", "strict_mode": false, "partial_parse_file_diff": true, "introspect": true, "write_json": true, "profiles_dir": "/Users/divya21raj/.dbt", "quiet": false, "log_format": "default"}}